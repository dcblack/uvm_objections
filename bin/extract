#!/usr/bin/perl
eval 'exec perl -S $0 ${1+"$@"}' # vim600:sw=2:tw=0
  if 0;#running_under_some_shell

# @(#)$Info: Extract data from simulation runs into tabular format. $ {{{
#
# @(#)$Email: <david.black@doulos.com>. $
# @(#)$License: Apache 2.0 $

require 5.0;
use strict;
use FindBin qw($RealBin $RealScript);
use FileHandle;
STDOUT->autoflush(1);
STDERR->autoflush(1);

if (scalar @ARGV == 0) {
  printf STDERR "USAGE: %s/%s LOGFILE(s) >table.csv\n",$RealBin,$RealScript;
  exit 0;
}

# Sample input:
#   TIMESTAMP: Starting at  1404420819 Thu Jul  3 21:53:39 BST 2014
#   UVM_INFO performance.sv(206) @ 21000001: uvm_test_top [test1:objections] RESULT: UVM-1.1c objected 42,000,000 times in 185,460 ms
#   TIMESTAMP: Finished at  1404421013 Thu Jul  3 21:56:53 BST 2014
# Sample output:
#   Basename, Transactions, Objected, Elapsed, Wall-time
#   i1.1c-u0r0x0L03a2, 42000000, 185.460, 194

# Header
printf "\"Created: %s\"\n", scalar localtime;
printf "%s, %s, %s, %s, %s\n","Basename","Transactions","Objected","Elapsed","Wall-time";

for my $filename (@ARGV) {
  my $fh;
  open $fh,'<',$filename;
  my $base = $filename;
  $base =~ s{[.]txt$}{};
  $base =~ s{.*/}{};
  my ($line, $starting, $finished, $transactions, $objected, $elapsed, $wall);
  my $NA = '=na()';
  $transactions = $NA;
  $objected = $NA;
  $elapsed = $NA;
  $wall = $NA;
  while ($line = <$fh>) {
    chomp $line;
    $line =~ s{^# *}{};
    if ($line =~ m{TIMESTAMP: (\w+) at *(\d+)}) {
      if ($1 eq 'Starting') {
        $starting = $2;
      } else {
        $finished = $2;
      }#endif
    } elsif ($line =~ m{([0-9,]+) transactions created}) {
      $transactions = $1;
    } elsif ($line =~ m{RESULT: .* objected ([0-9,]+) times in ([0-9,]+) ms}) {
      $objected = $1;
      $elapsed = $2;
      $elapsed =~ s{,}{}g;
      $elapsed = sprintf("%1.3f",$elapsed/1000.0);
    }#endif
    if ($line =~ m{Finished}) {
      $objected =~ s{,}{}g;
      $transactions =~ s{,}{}g;
      $wall = $finished - $starting;
      printf "%s, %s, %s, %s, %s\n",$base,$transactions,$objected,$elapsed,$wall;
      last;
    }#endif
  }#endwhile
  close $fh;
}#endfor
